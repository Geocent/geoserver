<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder location="classpath:geoxacmlApplication.properties" ignore-unresolvable="true"/>

    <bean id="initializerSetup" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.herasaf.xacml.core.simplePDP.initializers.InitializerExecutor.setInitalizers" />
        <property name="arguments">
            <util:set>
                <bean class="org.herasaf.xacml.core.simplePDP.initializers.jaxb.typeadapter.xacml20.functions.Xacml20DefaultFunctionsJaxbInitializer"/>
                <bean class="org.herasaf.xacml.core.simplePDP.initializers.jaxb.typeadapter.xacml20.datatypes.Xacml20DefaultDataTypesJaxbInitializer"/>
                <bean class="org.herasaf.xacml.core.simplePDP.initializers.jaxb.typeadapter.xacml20.rulecombiningalgorithms.Xacml20DefaultRuleCombiningAlgorithmsJaxbInitializer"/>
                <bean class="org.herasaf.xacml.core.simplePDP.initializers.jaxb.typeadapter.xacml20.policycombiningalgorithms.Xacml20DefaultPolicyCombiningAlgorithmsJaxbInitializer"/>
                <bean class="org.geotools.xacml.geoxacml.attr.initializers.GeoXACMLDefaultDataTypesJaxbInitializer"/>
                <bean class="org.geotools.xacml.geoxacml.cond.initializers.GeoXACMLDefaultFunctionsJaxbInitializer"/>
                <bean class="org.herasaf.xacml.core.simplePDP.initializers.jaxb.JaxbContextInitializer"/>
            </util:set>
        </property>
    </bean>

    <!-- init heras-af JAXB support and friends -->
    <bean id="initializerExecutor" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="initializerSetup">
        <property name="targetClass" value="org.herasaf.xacml.core.simplePDP.initializers.InitializerExecutor"/>
        <property name="targetMethod" value="runInitializers"/>
    </bean>

    <bean class="org.geoserver.xacml.request.RequestCtxBuilderFactoryImpl"/>
    <bean class="org.geoserver.xacml.role.XACMLDefaultRoleAuthority"/>

    <bean class="org.geotools.xacml.transport.SAML2XACMLAuthzDecisionQueryTransport">
        <constructor-arg index="0" value="${pdp.location}"/>
        <constructor-arg index="1" value="false"/>
        <property name="keyName" value="${xacml.keys.signing}"/>
    </bean>

    <!-- Inject the XACML resource access manager which replaces the default one -->
    <bean id="xacmlResourceAccessManager" class="org.geoserver.xacml.security.XACMLResourceAccessManager"/>

    <!-- Need a special implementation for creating an Authentication object for anonynmous users.
    The purpose it to crate XACMLRole objects instead of Spring Security GrantedAuthorities,
    disable this bean in the main applicationSecurityContext.xml  -->
    <bean id="anonymousAuthenticationFilter"
          class="org.geoserver.xacml.spring.security.XACMLAnonymousAuthenticationFilter" />


    <!-- Need a special implementation for the UserDetailsService to create XACMLRole objects
    instead of Spring Security GrantedAuthorities, disable this bean in the main applicationSecurityContext.xml  -->
    <!--<bean id="userDetailsService" class="org.geoserver.xacml.security.XACMLGeoserverUserDao" />-->
    <!-- this is handled in the saml2Auth code for now -->
    <!-- TODO: find a cleaner way to handle this - maybe RoleService? -->

    <!-- add a custom SecurityInterceptorProvider -->
    <bean id="xacmlSecurityInterceptorProvider" class="org.geoserver.xacml.security.XACMLSecurityInterceptorProvider" />
</beans>
